$input-color: $grey-darker !default;
$input-background-color: $white !default;
$input-border-color: $grey-lighter !default;
$input-shadow: inset 0 1px 2px rgba($black, .1) !default;

$input-hover-color: $grey-darker !default;
$input-hover-border-color: $grey-light !default;

$input-focus-color: $grey-darker !default;
$input-focus-border-color: $link !default;
$input-focus-box-shadow-size: 0 0 0 .125em !default;
$input-focus-box-shadow-color: rgba($link, .25) !default;

$input-disabled-color: $text-light !default;
$input-disabled-background-color: $background !default;
$input-disabled-border-color: $background !default;

$input-arrow: $link !default;

$input-icon-color: $grey-lighter !default;
$input-icon-active-color: $grey !default;

$input-radius: $radius !default;

$file-border-color: $border !default;
$file-radius: $radius !default;

$file-cta-background-color: $white-ter !default;
$file-cta-color: $grey-dark !default;
$file-cta-hover-color: $grey-darker !default;
$file-cta-active-color: $grey-darker !default;

$file-name-border-color: $border !default;
$file-name-border-style: solid !default;
$file-name-border-width: 1px 1px 1px 0 !default;
$file-name-max-width: 16em !default;

$label-color: $grey-darker !default;
$label-weight: $weight-bold !default;

$help-size: $size-small !default;

@mixin input
{
    color: $input-color;
    border-color: $input-border-color;
    background-color: $input-background-color;

    @include control;
    @include placeholder
    {
        color: rgba($input-color, .3);
    }


    &:hover,
    &.is-hovered
    {
        border-color: $input-hover-border-color;
    }

    &:focus,
    &.is-focused,
    &:active,
    &.is-active
    {
        border-color: $input-focus-border-color;
        box-shadow: $input-focus-box-shadow-size $input-focus-box-shadow-color;
    }

    &[disabled]
    {
        color: $input-disabled-color;
        border-color: $input-disabled-border-color;
        background-color: $input-disabled-background-color;
        box-shadow: none;

        @include placeholder
        {
            color: rgba($input-disabled-color, .3);
        }
    }
}

.input,
.textarea
{
    width: 100%;
    max-width: 100%;

    box-shadow: $input-shadow;

    @include input;

    &[type='search']
    {
        border-radius: 290486px;
    }

    &[readonly]
    {
        box-shadow: none;
    }

    // Colors
    @each $name, $pair in $colors
    {
        $color: nth($pair, 1);

        &.is-#{$name}
        {
            border-color: $color;

            &:focus,
            &.is-focused,
            &:active,
            &.is-active
            {
                box-shadow: $input-focus-box-shadow-size rgba($color, .25);
            }
        }
    }

    // Sizes
    &.is-small
    {
        @include control-small;
    }

    &.is-medium
    {
        @include control-medium;
    }

    &.is-large
    {
        @include control-large;
    }

    // Modifiers
    &.is-fullwidth
    {
        display: block;

        width: 100%;
    }

    &.is-inline
    {
        display: inline;

        width: auto;
    }
}

.input
{
    &.is-static
    {
        padding-right: 0;
        padding-left: 0;

        border-color: transparent;
        background-color: transparent;
        box-shadow: none;
    }
}

.textarea
{
    display: block;

    min-width: 100%;
    max-width: 100%;
    padding: .625em;

    resize: vertical;

    &:not([rows])
    {
        min-height: 120px;
        max-height: 600px;
    }

    &[rows]
    {
        height: unset;
    }

    // Modifiers
    &.has-fixed-size
    {
        resize: none;
    }
}

.checkbox,
.radio
{
    line-height: 1.25;

    position: relative;

    display: inline-block;

    cursor: pointer;

    input
    {
        cursor: pointer;
    }

    &:hover
    {
        color: $input-hover-color;
    }

    &[disabled]
    {
        cursor: not-allowed;

        color: $input-disabled-color;
    }
}

.radio
{
    & + .radio
    {
        margin-left: .5em;
    }
}

.select
{
    position: relative;

    display: inline-block;

    max-width: 100%;

    vertical-align: top;

    &:not(.is-multiple)
    {
        height: 2.25em;

        &::after
        {
            z-index: 4;
            top: 50%;
            right: 1.125em;

            margin-top: -.375em;

            @include arrow($input-arrow);
        }
    }

    select
    {
        font-size: 1em;

        display: block;

        max-width: 100%;

        cursor: pointer;

        outline: none;

        @include input;

        &::-ms-expand
        {
            display: none;
        }

        &[disabled]:hover
        {
            border-color: $input-disabled-border-color;
        }

        &:not([multiple])
        {
            padding-right: 2.5em;
        }

        &[multiple]
        {
            height: unset;
            padding: 0;

            option
            {
                padding: .5em 1em;
            }
        }
    }

    // States
    &:hover
    {
        &::after
        {
            border-color: $input-hover-color;
        }
    }

    // Colors
    @each $name, $pair in $colors
    {
        $color: nth($pair, 1);

        &.is-#{$name} select
        {
            border-color: $color;

            &:focus,
            &.is-focused,
            &:active,
            &.is-active
            {
                box-shadow: $input-focus-box-shadow-size rgba($color, .25);
            }
        }
    }

    // Sizes
    &.is-small
    {
        @include control-small;
    }

    &.is-medium
    {
        @include control-medium;
    }

    &.is-large
    {
        @include control-large;
    }

    // Modifiers
    &.is-disabled
    {
        &::after
        {
            border-color: $input-disabled-color;
        }
    }

    &.is-fullwidth
    {
        width: 100%;

        select
        {
            width: 100%;
        }
    }

    &.is-loading
    {
        &::after
        {
            position: absolute;
            top: .625em;
            right: .625em;

            margin-top: 0;

            transform: none;

            @include loader;
        }

        &.is-small:after
        {
            font-size: $size-small;
        }

        &.is-medium:after
        {
            font-size: $size-medium;
        }

        &.is-large:after
        {
            font-size: $size-large;
        }
    }
}

.file
{
    position: relative;

    display: flex;
    align-items: stretch;
    justify-content: flex-start;

    @include unselectable;

    // Colors
    @each $name, $pair in $colors
    {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);

        &.is-#{$name}
        {
            .file-cta
            {
                color: $color-invert;
                border-color: transparent;
                background-color: $color;
            }

            &:hover,
            &.is-hovered
            {
                .file-cta
                {
                    color: $color-invert;
                    border-color: transparent;
                    background-color: darken($color, 2.5%);
                }
            }

            &:focus,
            &.is-focused
            {
                .file-cta
                {
                    color: $color-invert;
                    border-color: transparent;
                    box-shadow: 0 0 .5em rgba($color, .25);
                }
            }

            &:active,
            &.is-active
            {
                .file-cta
                {
                    color: $color-invert;
                    border-color: transparent;
                    background-color: darken($color, 5%);
                }
            }
        }
    }

    // Sizes
    &.is-small
    {
        font-size: $size-small;
    }

    &.is-medium
    {
        font-size: $size-medium;

        .file-icon
        {
            .fa
            {
                font-size: 21px;
            }
        }
    }

    &.is-large
    {
        font-size: $size-large;

        .file-icon
        {
            .fa
            {
                font-size: 28px;
            }
        }
    }

    // Modifiers
    &.has-name
    {
        .file-cta
        {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }

        .file-name
        {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }

    &.is-centered
    {
        justify-content: center;
    }

    &.is-right
    {
        justify-content: flex-end;
    }

    &.is-boxed
    {
        .file-label
        {
            flex-direction: column;
        }

        .file-cta
        {
            flex-direction: column;

            height: auto;
            padding: 1em 3em;
        }

        .file-name
        {
            border-width: 0 1px 1px;
        }

        .file-icon
        {
            width: 1.5em;
            height: 1.5em;

            .fa
            {
                font-size: 21px;
            }
        }

        &.is-small
        {
            .file-icon .fa
            {
                font-size: 14px;
            }
        }

        &.is-medium
        {
            .file-icon .fa
            {
                font-size: 28px;
            }
        }

        &.is-large
        {
            .file-icon .fa
            {
                font-size: 35px;
            }
        }

        &.has-name
        {
            .file-cta
            {
                border-radius: $file-radius $file-radius 0 0;
            }

            .file-name
            {
                border-width: 0 1px 1px;
                border-radius: 0 0 $file-radius $file-radius;
            }
        }
    }

    &.is-right
    {
        .file-cta
        {
            border-radius: 0 $file-radius $file-radius 0;
        }

        .file-name
        {
            order: -1;

            border-width: 1px 0 1px 1px;
            border-radius: $file-radius 0 0 $file-radius;
        }
    }

    &.is-fullwidth
    {
        .file-label
        {
            width: 100%;
        }

        .file-name
        {
            flex-grow: 1;

            max-width: none;
        }
    }
}

.file-label
{
    position: relative;

    display: flex;
    overflow: hidden;
    align-items: stretch;
    justify-content: flex-start;

    cursor: pointer;

    &:hover
    {
        .file-cta
        {
            color: $file-cta-hover-color;
            background-color: darken($file-cta-background-color, 2.5%);
        }

        .file-name
        {
            border-color: darken($file-name-border-color, 2.5%);
        }
    }

    &:active
    {
        .file-cta
        {
            color: $file-cta-active-color;
            background-color: darken($file-cta-background-color, 5%);
        }

        .file-name
        {
            border-color: darken($file-name-border-color, 5%);
        }
    }
}

.file-input
{
    position: absolute;
    top: 0;
    left: 0;

    width: .01em;
    height: .01em;

    outline: none;
}

.file-cta,
.file-name
{
    font-size: 1em;

    padding-right: 1em;
    padding-left: 1em;

    white-space: nowrap;

    border-color: $file-border-color;
    border-radius: $file-radius;

    @include control;
}

.file-cta
{
    color: $file-cta-color;
    background-color: $file-cta-background-color;
}

.file-name
{
    display: block;
    overflow: hidden;

    max-width: $file-name-max-width;

    text-align: left;
    text-overflow: ellipsis;

    border-width: $file-name-border-width;
    border-style: $file-name-border-style;
    border-color: $file-name-border-color;
}

.file-icon
{
    display: flex;
    align-items: center;
    justify-content: center;

    width: 1em;
    height: 1em;
    margin-right: .5em;

    .fa
    {
        font-size: 14px;
    }
}

.label
{
    font-size: $size-normal;
    font-weight: $label-weight;

    display: block;

    color: $label-color;

    &:not(:last-child)
    {
        margin-bottom: .5em;
    }

    // Sizes
    &.is-small
    {
        font-size: $size-small;
    }

    &.is-medium
    {
        font-size: $size-medium;
    }

    &.is-large
    {
        font-size: $size-large;
    }
}

.help
{
    font-size: $help-size;

    display: block;

    margin-top: .25rem;

    @each $name, $pair in $colors
    {
        $color: nth($pair, 1);

        &.is-#{$name}
        {
            color: $color;
        }
    }
}

// Containers

.field
{
    &:not(:last-child)
    {
        margin-bottom: .75rem;
    }

    // Modifiers
    &.has-addons
    {
        display: flex;
        justify-content: flex-start;

        .control
        {
            &:not(:last-child)
            {
                margin-right: -1px;
            }

            &:first-child
            {
                .button,
                .input,
                .select select
                {
                    border-top-left-radius: $input-radius;
                    border-bottom-left-radius: $input-radius;
                }
            }

            &:last-child
            {
                .button,
                .input,
                .select select
                {
                    border-top-right-radius: $input-radius;
                    border-bottom-right-radius: $input-radius;
                }
            }

            .button,
            .input,
            .select select
            {
                border-radius: 0;

                &:hover,
                &.is-hovered
                {
                    z-index: 2;
                }

                &:focus,
                &.is-focused,
                &:active,
                &.is-active
                {
                    z-index: 3;

                    &:hover
                    {
                        z-index: 4;
                    }
                }
            }

            &.is-expanded
            {
                flex-grow: 1;
            }
        }

        &.has-addons-centered
        {
            justify-content: center;
        }

        &.has-addons-right
        {
            justify-content: flex-end;
        }

        &.has-addons-fullwidth
        {
            .control
            {
                flex-grow: 1;
                flex-shrink: 0;
            }
        }
    }

    &.is-grouped
    {
        display: flex;
        justify-content: flex-start;

        & > .control
        {
            flex-shrink: 0;

            &:not(:last-child)
            {
                margin-right: .75rem;
                margin-bottom: 0;
            }

            &.is-expanded
            {
                flex-grow: 1;
                flex-shrink: 1;
            }
        }

        &.is-grouped-centered
        {
            justify-content: center;
        }

        &.is-grouped-right
        {
            justify-content: flex-end;
        }

        &.is-grouped-multiline
        {
            flex-wrap: wrap;

            & > .control
            {
                &:last-child,
                &:not(:last-child)
                {
                    margin-bottom: .75rem;
                }
            }

            &:last-child
            {
                margin-bottom: -.75rem;
            }

            &:not(:last-child)
            {
                margin-bottom: 0;
            }
        }
    }

    &.is-horizontal
    {
        @include tablet
        {
            display: flex;
        }
    }
}

.field-label
{
    @include mobile
    {
        margin-bottom: .5rem;
    }
    @include tablet
    {
        flex-basis: 0;
        flex-grow: 1;
        flex-shrink: 0;

        margin-right: 1.5rem;

        text-align: right;

        &.is-small
        {
            font-size: $size-small;

            padding-top: .375em;
        }

        &.is-normal
        {
            padding-top: .375em;
        }

        &.is-medium
        {
            font-size: $size-medium;

            padding-top: .375em;
        }

        &.is-large
        {
            font-size: $size-large;

            padding-top: .375em;
        }
    }
    .label
    {
        font-size: inherit;
    }
}

.field-body
{
    @include tablet
    {
        display: flex;
        flex-basis: 0;
        flex-grow: 5;
        flex-shrink: 1;

        .field
        {
            margin-bottom: 0;
        }

        & > .field
        {
            flex-shrink: 1;

            &:not(.is-narrow)
            {
                flex-grow: 1;
            }

            &:not(:last-child)
            {
                margin-right: .75rem;
            }
        }
    }
    .field .field
    {
        margin-bottom: 0;
    }
}

.control
{
    font-size: $size-normal;

    position: relative;

    text-align: left;

    // Modifiers
    // DEPRECATED
    &.has-icon
    {
        .icon
        {
            position: absolute;
            z-index: 4;
            top: 0;

            width: 2.25em;
            height: 2.25em;

            pointer-events: none;

            color: $input-icon-color;
        }

        .input
        {
            &:focus
            {
                & + .icon
                {
                    color: $input-icon-active-color;
                }
            }

            &.is-small
            {
                & + .icon
                {
                    font-size: $size-small;
                }
            }

            &.is-medium
            {
                & + .icon
                {
                    font-size: $size-medium;
                }
            }

            &.is-large
            {
                & + .icon
                {
                    font-size: $size-large;
                }
            }
        }

        &:not(.has-icon-right)
        {
            .icon
            {
                left: 0;
            }

            .input
            {
                padding-left: 2.25em;
            }
        }

        &.has-icon-right
        {
            .icon
            {
                right: 0;
            }

            .input
            {
                padding-right: 2.25em;
            }
        }
    }

    &.has-icons-left,
    &.has-icons-right
    {
        .input,
        .select
        {
            &:focus
            {
                & ~ .icon
                {
                    color: $input-icon-active-color;
                }
            }

            &.is-small ~ .icon
            {
                font-size: $size-small;
            }

            &.is-medium ~ .icon
            {
                font-size: $size-medium;
            }

            &.is-large ~ .icon
            {
                font-size: $size-large;
            }
        }

        .icon
        {
            position: absolute;
            z-index: 4;
            top: 0;

            width: 2.25em;
            height: 2.25em;

            pointer-events: none;

            color: $input-icon-color;
        }
    }

    &.has-icons-left
    {
        .input,
        .select select
        {
            padding-left: 2.25em;
        }

        .icon.is-left
        {
            left: 0;
        }
    }

    &.has-icons-right
    {
        .input,
        .select select
        {
            padding-right: 2.25em;
        }

        .icon.is-right
        {
            right: 0;
        }
    }

    &.is-loading
    {
        &::after
        {
            position: absolute !important;
            top: .625em;
            right: .625em;

            @include loader;
        }

        &.is-small:after
        {
            font-size: $size-small;
        }

        &.is-medium:after
        {
            font-size: $size-medium;
        }

        &.is-large:after
        {
            font-size: $size-large;
        }
    }
}
